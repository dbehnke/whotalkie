name: Go CI

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.25.x, 1.26.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-modules-

      - name: Install dependencies
        run: go mod download

      - name: Run linter (golangci-lint)
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.59.0
          args: --config .golangci.yml ./...

      - name: Run go vet
        run: go vet ./...

      - name: Run tests with coverage
        run: |
          mkdir -p coverage
          go test ./... -v -coverprofile=coverage/coverage.out

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/coverage.out

      - name: Build
        run: go build ./...

      - name: Upload coverage to Codecov (optional)
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          files: coverage/coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
name: Go CI

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    name: Go CI

    on:
      push:
        branches: [ main, 'feature/*' ]
      pull_request:
        branches: [ main ]

    jobs:
      test:
        name: Test on ${{ matrix.go-version }}
        runs-on: ubuntu-latest
        strategy:
          matrix:
            go-version: [1.25.x, 1.26.x]
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Set up Go
            uses: actions/setup-go@v4
            with:
              go-version: ${{ matrix.go-version }}

          - name: Cache Go modules
            uses: actions/cache@v4
            with:
              path: |
                ~/.cache/go-build
                ${{ env.GOMODCACHE }}
              key: ${{ runner.os }}-go-${{ matrix.go-version }}-modules-${{ hashFiles('**/go.sum') }}
              restore-keys: |
                ${{ runner.os }}-go-${{ matrix.go-version }}-modules-

          - name: Install dependencies
            run: go mod download

          - name: Run linter (golangci-lint)
            uses: golangci/golangci-lint-action@v4
            with:
              version: v1.59.0
              args: --config .golangci.yml ./...

          - name: Run go vet
            run: go vet ./...

          - name: Run tests with coverage
            run: |
              mkdir -p coverage
              go test ./... -v -coverprofile=coverage/coverage.out

          - name: Upload coverage artifact
            uses: actions/upload-artifact@v4
            with:
              name: coverage-report
              path: coverage/coverage.out

          - name: Build
            run: go build ./...

          - name: Upload coverage to Codecov (optional)
            if: ${{ secrets.CODECOV_TOKEN != '' }}
            uses: codecov/codecov-action@v4
            with:
              files: coverage/coverage.out
              token: ${{ secrets.CODECOV_TOKEN }}
