---
name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RUN_LINT: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch full history so tooling that reads VCS metadata (build stamping)
          # can run inside the dockerized linter without failing with "error obtaining VCS status".
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Install dependencies
        run: go mod download

      - name: Run go vet
        run: go vet ./...

      - name: Run golangci-lint (docker)
        if: env.RUN_LINT == 'true'
        uses: docker://golangci/golangci-lint:v1.59.0
        with:
          args: golangci-lint run --timeout=6m --config .golangci.yml ./...

      - name: Run tests with coverage
        run: |
          mkdir -p coverage
          go test ./... -v -coverprofile=coverage/coverage.out

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/coverage.out
